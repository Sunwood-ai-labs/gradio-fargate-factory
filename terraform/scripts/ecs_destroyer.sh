#!/bin/bash

# „Ç´„É©„Éº„Ç≥„Éº„ÉâÂÆöÁæ©
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
GRAY='\033[0;90m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂäπÊûú
spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# „Éó„É≠„Ç∞„É¨„Çπ„Éê„Éº
progress_bar() {
    local current=$1
    local total=$2
    local width=50
    local percentage=$((current * 100 / total))
    local filled=$((current * width / total))
    
    printf "\r${CYAN}["
    for ((i=0; i<filled; i++)); do printf "‚ñà"; done
    for ((i=filled; i<width; i++)); do printf "‚ñë"; done
    printf "] ${percentage}%%${NC}"
}

# „Éò„ÉÉ„ÉÄ„ÉºË°®Á§∫
print_header() {
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë${WHITE}                    üöÄ ECS DESTROYER 3000 üöÄ                   ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïë${CYAN}                  Complete ECS Cleanup Tool                  ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# „Çª„ÇØ„Ç∑„Éß„É≥„Éò„ÉÉ„ÉÄ„Éº
print_section() {
    echo -e "${BOLD}${BLUE}‚ñ∂ $1${NC}"
    echo -e "${GRAY}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
}

# ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏
print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Ë≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏
print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# ÊÉÖÂ†±„É°„ÉÉ„Çª„Éº„Ç∏
print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

# ÂÆüË°å„É°„ÉÉ„Çª„Éº„Ç∏
print_executing() {
    echo -e "${PURPLE}üîÑ $1${NC}"
}

# ECSÂÆåÂÖ®ÂâäÈô§„Çπ„ÇØ„É™„Éó„Éà
REGION="ap-northeast-1"
CLUSTER_NAME="gradio-ecs-cluster"

clear
print_header

echo -e "${WHITE}„ÇØ„É©„Çπ„Çø„Éº: ${YELLOW}$CLUSTER_NAME${NC}"
echo -e "${WHITE}„É™„Éº„Ç∏„Éß„É≥: ${YELLOW}$REGION${NC}"
echo -e "${WHITE}ÈñãÂßãÊôÇÂàª: ${YELLOW}$(date)${NC}"
echo ""

# „Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥
echo -e "${RED}${BOLD}‚ö†Ô∏è  Âç±Èô∫„Å™Êìç‰Ωú„Åß„ÅôÔºÅ 3ÁßíÂæå„Å´ÈñãÂßã„Åó„Åæ„Åô... ‚ö†Ô∏è${NC}"
for i in 3 2 1; do
    echo -e "${RED}${BOLD}$i...${NC}"
    sleep 1
done
echo -e "${GREEN}${BOLD}üöÄ ÈñãÂßãÔºÅ${NC}"
echo ""

total_steps=7
current_step=0

# 1. „Åô„Åπ„Å¶„ÅÆECS„Çµ„Éº„Éì„Çπ„ÇíÁ¢∫Ë™ç„ÉªÂâäÈô§
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 1: ECS„Çµ„Éº„Éì„ÇπÂâäÈô§"

print_executing "ECS„Çµ„Éº„Éì„Çπ„ÇíÊ§úÁ¥¢‰∏≠..."
SERVICES=$(aws ecs list-services --cluster $CLUSTER_NAME --region $REGION --query 'serviceArns[*]' --output text 2>/dev/null)

if [ -n "$SERVICES" ] && [ "$SERVICES" != "None" ]; then
    service_count=$(echo $SERVICES | wc -w)
    echo -e "${CYAN}üìã Áô∫Ë¶ã„Åï„Çå„Åü„Çµ„Éº„Éì„ÇπÊï∞: ${YELLOW}$service_count${NC}"
    
    service_num=0
    for service_arn in $SERVICES; do
        SERVICE_NAME=$(basename $service_arn)
        service_num=$((service_num + 1))
        echo -e "${WHITE}  [$service_num/$service_count] ${CYAN}$SERVICE_NAME${NC}"
        
        # „Çµ„Éº„Éì„Çπ„ÅÆË©≥Á¥∞ÂèñÂæó
        DESIRED_COUNT=$(aws ecs describe-services --cluster $CLUSTER_NAME --services $SERVICE_NAME --region $REGION --query 'services[0].desiredCount' --output text)
        echo -e "    ${GRAY}ÁèæÂú®„ÅÆdesiredCount: ${YELLOW}$DESIRED_COUNT${NC}"
        
        # „Çµ„Éº„Éì„Çπ„Çí0„Å´„Çπ„Ç±„Éº„É´„ÉÄ„Ç¶„É≥
        if [ "$DESIRED_COUNT" != "0" ]; then
            print_executing "    „Çπ„Ç±„Éº„É´„ÉÄ„Ç¶„É≥‰∏≠..."
            aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --desired-count 0 --region $REGION >/dev/null 2>&1
            
            # „Çπ„Ç±„Éº„É´„ÉÄ„Ç¶„É≥ÂÆå‰∫Ü„ÇíÂæÖÊ©ü
            print_executing "    ÂÆâÂÆöÂåñ„ÇíÂæÖÊ©ü‰∏≠..."
            aws ecs wait services-stable --cluster $CLUSTER_NAME --services $SERVICE_NAME --region $REGION &
            spinner $!
        fi
        
        # „Çµ„Éº„Éì„ÇπÂâäÈô§
        print_executing "    „Çµ„Éº„Éì„ÇπÂâäÈô§‰∏≠..."
        aws ecs delete-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --region $REGION >/dev/null 2>&1
        print_success "    „Çµ„Éº„Éì„ÇπÂâäÈô§ÂÆå‰∫Ü: $SERVICE_NAME"
    done
else
    print_info "„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™„Çµ„Éº„Éì„Çπ„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"
fi

echo ""

# 2. „Åô„Åπ„Å¶„ÅÆ„Çø„Çπ„ÇØÂÆöÁæ©„ÇíÁ¢∫Ë™ç„ÉªÂâäÈô§
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 2: „Çø„Çπ„ÇØÂÆöÁæ©ÂâäÈô§"

print_executing "„Çø„Çπ„ÇØÂÆöÁæ©„ÇíÊ§úÁ¥¢‰∏≠..."
TASK_DEFINITIONS=$(aws ecs list-task-definitions --region $REGION --status ACTIVE --query 'taskDefinitionArns[*]' --output text 2>/dev/null)

if [ -n "$TASK_DEFINITIONS" ] && [ "$TASK_DEFINITIONS" != "None" ]; then
    td_count=$(echo $TASK_DEFINITIONS | wc -w)
    echo -e "${CYAN}üìã Áô∫Ë¶ã„Åï„Çå„Åü„Çø„Çπ„ÇØÂÆöÁæ©Êï∞: ${YELLOW}$td_count${NC}"
    
    td_num=0
    for td_arn in $TASK_DEFINITIONS; do
        TD_NAME=$(echo $td_arn | cut -d'/' -f2)
        td_num=$((td_num + 1))
        echo -e "${WHITE}  [$td_num/$td_count] ${CYAN}$TD_NAME${NC}"
        
        # „Çø„Çπ„ÇØÂÆöÁæ©„ÇíÈùû„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñ
        print_executing "    Èùû„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñ‰∏≠..."
        aws ecs deregister-task-definition --task-definition $td_arn --region $REGION >/dev/null 2>&1
        print_success "    Èùû„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñÂÆå‰∫Ü: $TD_NAME"
    done
else
    print_info "„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™„Çø„Çπ„ÇØÂÆöÁæ©„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"
fi

echo ""

# 3. ÂÆüË°å‰∏≠„ÅÆ„Çø„Çπ„ÇØ„ÇíÂº∑Âà∂ÂÅúÊ≠¢
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 3: ÂÆüË°å‰∏≠„Çø„Çπ„ÇØÂÅúÊ≠¢"

print_executing "ÂÆüË°å‰∏≠„Çø„Çπ„ÇØ„ÇíÊ§úÁ¥¢‰∏≠..."
RUNNING_TASKS=$(aws ecs list-tasks --cluster $CLUSTER_NAME --region $REGION --query 'taskArns[*]' --output text 2>/dev/null)

if [ -n "$RUNNING_TASKS" ] && [ "$RUNNING_TASKS" != "None" ]; then
    task_count=$(echo $RUNNING_TASKS | wc -w)
    echo -e "${CYAN}üìã ÂÆüË°å‰∏≠„ÅÆ„Çø„Çπ„ÇØÊï∞: ${YELLOW}$task_count${NC}"
    
    task_num=0
    for task_arn in $RUNNING_TASKS; do
        TASK_ID=$(basename $task_arn)
        task_num=$((task_num + 1))
        echo -e "${WHITE}  [$task_num/$task_count] ${CYAN}$TASK_ID${NC}"
        
        # „Çø„Çπ„ÇØÂº∑Âà∂ÂÅúÊ≠¢
        print_executing "    Âº∑Âà∂ÂÅúÊ≠¢‰∏≠..."
        aws ecs stop-task --cluster $CLUSTER_NAME --task $task_arn --reason "üî• FORCE DELETION BY ECS DESTROYER 3000" --region $REGION >/dev/null 2>&1
        print_success "    ÂÅúÊ≠¢ÂÆå‰∫Ü: $TASK_ID"
    done
    
    # „Åô„Åπ„Å¶„ÅÆ„Çø„Çπ„ÇØ„ÅåÂÅúÊ≠¢„Åô„Çã„Åæ„ÅßÂæÖÊ©ü
    print_executing "„Åô„Åπ„Å¶„ÅÆ„Çø„Çπ„ÇØÂÅúÊ≠¢„ÇíÂæÖÊ©ü‰∏≠..."
    sleep 10 &
    spinner $!
else
    print_info "ÂÆüË°å‰∏≠„ÅÆ„Çø„Çπ„ÇØ„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"
fi

echo ""

# 4. ÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„Éº„ÅÆÁ¢∫Ë™ç„ÉªÂâäÈô§
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 4: ÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„ÉºÂâäÈô§"

print_executing "ÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„Éº„ÇíÊ§úÁ¥¢‰∏≠..."
CAPACITY_PROVIDERS=$(aws ecs describe-clusters --clusters $CLUSTER_NAME --region $REGION --query 'clusters[0].capacityProviders[*]' --output text 2>/dev/null)

if [ -n "$CAPACITY_PROVIDERS" ] && [ "$CAPACITY_PROVIDERS" != "None" ]; then
    echo -e "${CYAN}üìã Áô∫Ë¶ã„Åï„Çå„ÅüÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„Éº: ${YELLOW}$CAPACITY_PROVIDERS${NC}"
    print_executing "ÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„ÉºÂâäÈô§‰∏≠..."
    aws ecs put-cluster-capacity-providers --cluster $CLUSTER_NAME --capacity-providers --region $REGION >/dev/null 2>&1
    print_success "ÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„ÉºÂâäÈô§ÂÆå‰∫Ü"
else
    print_info "ÂÆπÈáè„Éó„É≠„Éê„Ç§„ÉÄ„Éº„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"
fi

echo ""

# 5. ECS„ÇØ„É©„Çπ„Çø„ÉºÂâäÈô§
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 5: ECS„ÇØ„É©„Çπ„Çø„ÉºÂâäÈô§"

print_executing "„ÇØ„É©„Çπ„Çø„Éº„Çπ„ÉÜ„Éº„Çø„ÇπÁ¢∫Ë™ç‰∏≠..."
CLUSTER_STATUS=$(aws ecs describe-clusters --clusters $CLUSTER_NAME --region $REGION --query 'clusters[0].status' --output text 2>/dev/null)

if [ "$CLUSTER_STATUS" == "ACTIVE" ]; then
    echo -e "${CYAN}üìã „ÇØ„É©„Çπ„Çø„Éº„Çπ„ÉÜ„Éº„Çø„Çπ: ${YELLOW}$CLUSTER_STATUS${NC}"
    print_executing "üí• ECS„ÇØ„É©„Çπ„Çø„ÉºÂâäÈô§‰∏≠..."
    
    # „ÇØ„É©„Çπ„Çø„ÉºÂâäÈô§
    aws ecs delete-cluster --cluster $CLUSTER_NAME --region $REGION >/dev/null 2>&1
    
    if [ $? -eq 0 ]; then
        print_success "ECS„ÇØ„É©„Çπ„Çø„ÉºÂâäÈô§ÂÆå‰∫Ü: $CLUSTER_NAME"
    else
        print_error "ECS„ÇØ„É©„Çπ„Çø„ÉºÂâäÈô§„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"
        print_warning "ÊâãÂãï„ÅßÂâäÈô§„ÅåÂøÖË¶Å„Å™Â†¥Âêà„Åå„ÅÇ„Çä„Åæ„Åô"
    fi
else
    print_info "„ÇØ„É©„Çπ„Çø„Éº„ÅØÊó¢„Å´ÂâäÈô§„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÂ≠òÂú®„Åó„Åæ„Åõ„Çì"
fi

echo ""

# 6. Èñ¢ÈÄ£„Åô„ÇãCloudWatch„É≠„Ç∞„Ç∞„É´„Éº„ÉóÂâäÈô§
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 6: CloudWatch„É≠„Ç∞„Ç∞„É´„Éº„ÉóÂâäÈô§"

print_executing "„É≠„Ç∞„Ç∞„É´„Éº„Éó„ÇíÊ§úÁ¥¢‰∏≠..."
LOG_GROUPS=$(aws logs describe-log-groups --region $REGION --log-group-name-prefix "/ecs/" --query 'logGroups[*].logGroupName' --output text 2>/dev/null)

if [ -n "$LOG_GROUPS" ] && [ "$LOG_GROUPS" != "None" ]; then
    lg_count=$(echo $LOG_GROUPS | wc -w)
    echo -e "${CYAN}üìã Áô∫Ë¶ã„Åï„Çå„Åü„É≠„Ç∞„Ç∞„É´„Éº„ÉóÊï∞: ${YELLOW}$lg_count${NC}"
    
    lg_num=0
    for log_group in $LOG_GROUPS; do
        lg_num=$((lg_num + 1))
        echo -e "${WHITE}  [$lg_num/$lg_count] ${CYAN}$log_group${NC}"
        print_executing "    „É≠„Ç∞„Ç∞„É´„Éº„ÉóÂâäÈô§‰∏≠..."
        aws logs delete-log-group --log-group-name $log_group --region $REGION >/dev/null 2>&1
        print_success "    ÂâäÈô§ÂÆå‰∫Ü: $log_group"
    done
else
    print_info "Èñ¢ÈÄ£„Åô„Çã„É≠„Ç∞„Ç∞„É´„Éº„Éó„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"
fi

echo ""

# 7. Terraform„ÅÆÁä∂ÊÖã„Åã„ÇâECSÈñ¢ÈÄ£„É™„ÇΩ„Éº„Çπ„ÇíÂâäÈô§
current_step=$((current_step + 1))
progress_bar $current_step $total_steps
echo ""
print_section "Step 7: TerraformÁä∂ÊÖã„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó"

if command -v terraform &> /dev/null; then
    print_executing "TerraformÁä∂ÊÖã„Åã„ÇâECSÈñ¢ÈÄ£ÂâäÈô§‰∏≠..."
    terraform state rm aws_ecs_cluster.main 2>/dev/null && print_success "aws_ecs_cluster.main ÂâäÈô§ÂÆå‰∫Ü" || print_info "aws_ecs_cluster.main „ÅØÁä∂ÊÖã„Å´„ÅÇ„Çä„Åæ„Åõ„Çì"
    terraform state rm aws_ecs_service.main 2>/dev/null && print_success "aws_ecs_service.main ÂâäÈô§ÂÆå‰∫Ü" || print_info "aws_ecs_service.main „ÅØÁä∂ÊÖã„Å´„ÅÇ„Çä„Åæ„Åõ„Çì"
    terraform state rm aws_ecs_task_definition.main 2>/dev/null && print_success "aws_ecs_task_definition.main ÂâäÈô§ÂÆå‰∫Ü" || print_info "aws_ecs_task_definition.main „ÅØÁä∂ÊÖã„Å´„ÅÇ„Çä„Åæ„Åõ„Çì"
else
    print_warning "Terraform„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
fi

echo ""

# ÂÆå‰∫Ü„É°„ÉÉ„Çª„Éº„Ç∏
echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë${WHITE}                    üéâ ÂâäÈô§ÂÆå‰∫ÜÔºÅ üéâ                          ${GREEN}‚ïë${NC}"
echo -e "${GREEN}‚ïë${CYAN}              ECS DESTROYER 3000 Mission Complete!           ${GREEN}‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

echo -e "${WHITE}üìä ${BOLD}Á¢∫Ë™ç„Ç≥„Éû„É≥„Éâ:${NC}"
echo -e "${CYAN}   aws ecs list-clusters --region $REGION${NC}"
echo -e "${CYAN}   aws ecs list-services --cluster $CLUSTER_NAME --region $REGION${NC}"
echo ""

echo -e "${WHITE}üí° ${BOLD}Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó:${NC}"
echo -e "${YELLOW}   1. terraform destroy „Åß„Ç§„É≥„Éï„É©„ÇíÂâäÈô§${NC}"
echo -e "${YELLOW}   2. „Åæ„Åü„ÅØÂÄãÂà•„Å´„É™„ÇΩ„Éº„Çπ„ÇíÂâäÈô§${NC}"
echo ""

echo -e "${WHITE}ÂÆå‰∫ÜÊôÇÂàª: ${YELLOW}$(date)${NC}"
echo -e "${GREEN}${BOLD}üöÄ ECSÁí∞Â¢É„ÅåÊ≠£Â∏∏„Å´Êõ¥Âú∞„Å´„Å™„Çä„Åæ„Åó„ÅüÔºÅ üöÄ${NC}"